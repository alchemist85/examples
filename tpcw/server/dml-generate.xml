<project>
  <!-- the name of the class that should be used to generate code from the DML -->
  <property name="fenix.framework.codeGenerator" value="pt.ist.fenixframework.backend.mem.CoreCodeGenerator"/>

  <macrodef name="dml-compile"
            description="Generates the domain model from a source DML Language file">
    <attribute name="codeGenerator" description="The code generator to use" default="${fenix.framework.codeGenerator}"/>
    <attribute name="java-sources" description="Directory of domain objects" />
    <attribute name="java-gen" description="Directory of the generated base domain objects" />
    <attribute name="projectName" description="Name of the project (used for looking up project.properties)" />
    <element name="elements" implicit="true" />
    <sequential>
      <mkdir dir="@{java-gen}" />
      <java classname="pt.ist.fenixframework.DmlCompiler" fork="true">
        <arg value="-d" />
        <arg value="@{java-sources}" />
        <arg value="-db" />
        <arg value="@{java-gen}" />
        <arg value="-generator" />
        <arg value="@{codeGenerator}" />
        <arg value="-pn" />
        <arg value="@{projectName}" />
        <elements />
      </java>
    </sequential>
  </macrodef>

  <macrodef name="post-process-domain"
            description="Post process the domain classes generated by the DML compiler">
    <attribute name="projectName" description="The name of the project being post-processed" />
    <attribute name="classesDir" description="Directory where files reside" />
    <element name="elements" implicit="true" />
    <sequential>
      <java classname="pt.ist.fenixframework.core.FullPostProcessDomainClasses" 
            dir="@{classesDir}"
            fork="true">
        <arg value="-cd"/>
        <arg value="@{classesDir}"/>
        <arg value="-pn"/>
        <arg value="@{projectName}"/>
        <elements />
      </java>
    </sequential>
  </macrodef>

</project>
